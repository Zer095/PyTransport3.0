<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="potentialProto_8h" kind="file" language="C++">
    <compoundname>potentialProto.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>PyTransport/PyTransCpp/cppsrc/potentialProto.h</label>
        <link refid="potentialProto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="potentialProto_8h_1a777bb22f497842b6899e91c53014a591" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int nF</definition>
        <argsstring></argsstring>
        <name>nF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="27" column="12" bodyfile="PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="potentialProto_8h_1a33504e2314ffd2841b584c3d95f9a28a" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int nP</definition>
        <argsstring></argsstring>
        <name>nP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="28" column="12" bodyfile="PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="potentialProto_8h_1a11553651df55e341a3088a9f66f82dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double V</definition>
        <argsstring>(double f[], double p[])</argsstring>
        <name>V</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Prototype function for evaluating the potential. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of model parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The potential value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="36" column="8" declfile="PyTransport/PyTransCpp/cppsrc/potentialProto.h" declline="36" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="potentialProto_8h_1a43c542febf89520d909461ef6137b71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dV</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>dV</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Prototype function for evaluating the gradient of the potential. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>Output array for the gradient components. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="44" column="6" declfile="PyTransport/PyTransCpp/cppsrc/potentialProto.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="potentialProto_8h_1ab586891155860781408e467b1c0363f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dVV</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>dVV</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Prototype function for evaluating the Hessian (second derivatives) of the potential. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>Output array for the flattened Hessian matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="52" column="6" declfile="PyTransport/PyTransCpp/cppsrc/potentialProto.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="potentialProto_8h_1aed96f26f147683061627bdb0703d1130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dVVV</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>dVVV</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Prototype function for evaluating the third derivatives of the potential. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>Output array for the flattened third derivative tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="60" column="6" declfile="PyTransport/PyTransCpp/cppsrc/potentialProto.h" declline="60" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Prototype header for automatically generated scalar field potential and derivative calculations. </para>
    </briefdescription>
    <detaileddescription>
<para>This file serves as a template that <computeroutput>PyTransSetup.py</computeroutput> uses to generate <computeroutput><ref refid="potential_8h" kindref="compound">potential.h</ref></computeroutput>. It defines the function signatures for evaluating the potential, its gradient, Hessian, and third derivatives. The actual implementations are symbolically derived and inserted by the Python setup script.</para>
<para><simplesect kind="copyright"><para>GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>POTENTIALPROTO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POTENTIALPROTO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#Rewrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#FP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nF;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nP;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="potentialProto_8h_1a11553651df55e341a3088a9f66f82dd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="potentialProto_8h_1a11553651df55e341a3088a9f66f82dd4" kindref="member">V</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[]);<sp/></highlight><highlight class="comment">//<sp/>Pot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="potentialProto_8h_1a43c542febf89520d909461ef6137b71d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="potentialProto_8h_1a43c542febf89520d909461ef6137b71d" kindref="member">dV</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[]);<sp/></highlight><highlight class="comment">//<sp/>dPot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="potentialProto_8h_1ab586891155860781408e467b1c0363f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="potentialProto_8h_1ab586891155860781408e467b1c0363f6" kindref="member">dVV</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[]);<sp/></highlight><highlight class="comment">//<sp/>ddPot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="potentialProto_8h_1aed96f26f147683061627bdb0703d1130" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="potentialProto_8h_1aed96f26f147683061627bdb0703d1130" kindref="member">dVVV</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[]);<sp/></highlight><highlight class="comment">//<sp/>dddPot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="PyTransport/PyTransCpp/cppsrc/potentialProto.h"/>
  </compounddef>
</doxygen>
