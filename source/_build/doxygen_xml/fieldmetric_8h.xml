<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="fieldmetric_8h" kind="file" language="C++">
    <compoundname>fieldmetric.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">math.h</includes>
    <includedby refid="NC_2evolve_8h" local="yes">PyTransport/PyTransCpp/cppsrc/NC/evolve.h</includedby>
    <includedby refid="NC_2model_8h" local="yes">PyTransport/PyTransCpp/cppsrc/NC/model.h</includedby>
    <includedby refid="NC_2moments_8h" local="yes">PyTransport/PyTransCpp/cppsrc/NC/moments.h</includedby>
    <includedby refid="moments_8h" local="yes">PyTransport/PyTransCpp/cppsrc/moments.h</includedby>
    <includedby refid="potential_8h" local="yes">PyTransport/PyTransCpp/cppsrc/potential.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>PyTransport/PyTransCpp/cppsrc/fieldmetric.h</label>
        <link refid="fieldmetric_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>PyTransport/PyTransCpp/cppsrc/NC/evolve.h</label>
        <link refid="NC_2evolve_8h_source"/>
      </node>
      <node id="3">
        <label>PyTransport/PyTransCpp/cppsrc/NC/model.h</label>
        <link refid="NC_2model_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>PyTransport/PyTransCpp/cppsrc/NC/moments.h</label>
        <link refid="NC_2moments_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>PyTransport/PyTransCpp/cppsrc/evolve.h</label>
        <link refid="evolve_8h_source"/>
      </node>
      <node id="1">
        <label>PyTransport/PyTransCpp/cppsrc/fieldmetric.h</label>
        <link refid="fieldmetric_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>PyTransport/PyTransCpp/cppsrc/model.h</label>
        <link refid="model_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>PyTransport/PyTransCpp/cppsrc/moments.h</label>
        <link refid="moments_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>PyTransport/PyTransCpp/cppsrc/potential.h</label>
        <link refid="potential_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="fieldmetric_8h_1af374f2e8334ca8349bd99b61463eeaf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FM</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>FM</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Computes the field space metric. </para>
        </briefdescription>
        <detaileddescription>
<para>Prototype function for computing the field space metric.</para>
<para>This function is generated automatically by <computeroutput>PyTransSetup.py</computeroutput> based on the symbolic definition of the metric in Python. It evaluates the metric tensor components for given field values and parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>An output array where the flattened 2D metric tensor (g_ij) will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" line="35" column="6" bodyfile="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="fieldmetric_8h_1a29192aab019af709d6974ea555667ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CS</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>CS</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Computes the Christoffel symbols. </para>
        </briefdescription>
        <detaileddescription>
<para>Prototype function for computing the Christoffel symbols.</para>
<para>This function is generated automatically by <computeroutput>PyTransSetup.py</computeroutput>. It evaluates the Christoffel symbols (Gamma^k_ij) for given field values and parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>An output array where the flattened 3D Christoffel symbol tensor will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" line="51" column="6" bodyfile="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="fieldmetric_8h_1a79d1ede58ab62ddec776b08307c370fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RM</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>RM</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Computes the Riemann curvature tensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Prototype function for computing the Riemann curvature tensor.</para>
<para>This function is generated automatically by <computeroutput>PyTransSetup.py</computeroutput>. It evaluates the Riemann curvature tensor components for given field values and parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>An output array where the flattened 4D Riemann tensor will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" line="66" column="6" bodyfile="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="fieldmetric_8h_1aa00367fa6011c17fcf9d22684bd1b5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RMcd</definition>
        <argsstring>(double f[], double p[], double sum[])</argsstring>
        <name>RMcd</name>
        <param>
          <type>double</type>
          <declname>f</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Computes the covariant derivative of the Riemann curvature tensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Prototype function for computing the covariant derivative of the Riemann curvature tensor.</para>
<para>This function is generated automatically by <computeroutput>PyTransSetup.py</computeroutput>. It evaluates the covariant derivative of the Riemann tensor for given field values and parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of field values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of model parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sum</parametername>
</parameternamelist>
<parameterdescription>
<para>An output array where the flattened 5D covariant Riemann tensor will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" line="81" column="6" bodyfile="PyTransport/PyTransCpp/cppsrc/fieldmetric.h" bodystart="81" bodyend="84"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Defines functions for calculating field space metric and related curvature quantities. </para>
    </briefdescription>
    <detaileddescription>
<para>This file provides functions to compute the field space metric (g_ij), Christoffel symbols (Gamma^k_ij), Riemann curvature tensor (R_ijkl), and covariant derivatives of the Riemann tensor. These quantities are essential for models with a curved field space.</para>
<para><simplesect kind="copyright"><para>GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. </para>
</simplesect>
<simplesect kind="see"><para><ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FIELDMETRIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIELDMETRIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="fieldmetric_8h_1af374f2e8334ca8349bd99b61463eeaf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fieldmetric_8h_1af374f2e8334ca8349bd99b61463eeaf3" kindref="member">FM</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[])</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#FP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="fieldmetric_8h_1a29192aab019af709d6974ea555667ee1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fieldmetric_8h_1a29192aab019af709d6974ea555667ee1" kindref="member">CS</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[])</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Christoffel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="fieldmetric_8h_1a79d1ede58ab62ddec776b08307c370fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fieldmetric_8h_1a79d1ede58ab62ddec776b08307c370fe" kindref="member">RM</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[])</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Riemann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="fieldmetric_8h_1aa00367fa6011c17fcf9d22684bd1b5f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fieldmetric_8h_1aa00367fa6011c17fcf9d22684bd1b5f8" kindref="member">RMcd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[],</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum[])</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Riemanncd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="PyTransport/PyTransCpp/cppsrc/fieldmetric.h"/>
  </compounddef>
</doxygen>
